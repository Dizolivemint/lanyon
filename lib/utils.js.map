{"version":3,"sources":["../src/utils.js"],"names":["semver","require","fs","path","yaml","shell","spawnSync","oneLine","stripIndent","scrolex","persistOpts","announce","addCommandAsComponent","main","module","failure","process","exit","utils","exports","preferLocalPackage","args","filename","appDir","name","entry","version","localModulePackage","absoluteEntry","realpathSync","e","type","exe","shift","i","stdio","dockerCmd","cmd","flags","cacheDir","projectDir","lanyonVersion","upwardDirContaining","find","cwd","not","env","PWD","parts","split","length","newParts","ppath","join","existsSync","undefined","basename","dirname","pop","initProject","assetsBuildDir","gitRoot","binDir","mkdir","exec","relative","fsCopySync","src","dst","mode","encoding","writeFileSync","readFileSync","writeConfig","cfg","runtime","lanyonDir","safeDump","jekyll","JSON","stringify","nodemon","recordsPath","dBuf","gBuf","gems","satisfied","app","checkOn","prerequisites","rubyProvidersSkip","tag","indexOf","range","p","appVersionFull","stdout","trim","stderr","appVersion","satisfies","stick"],"mappings":"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","file":"utils.js","sourcesContent":["const semver      = require('semver')\nconst fs          = require('fs')\n// const _        = require('lodash')\nconst path        = require('path')\nconst yaml        = require('js-yaml')\nconst shell       = require('shelljs')\nconst spawnSync   = require('spawn-sync')\nconst oneLine     = require('common-tags/lib/oneLine')\nconst stripIndent = require('common-tags/lib/stripIndent')\nconst scrolex     = require('scrolex').persistOpts({\n  announce             : true,\n  addCommandAsComponent: true,\n})\n\nif (require.main === module) {\n  scrolex.failure(`Please only used this module via require`)\n  process.exit(1)\n}\n\nconst utils = module.exports\n\nmodule.exports.preferLocalPackage = (args, filename, appDir, name, entry, version) => {\n  let localModulePackage\n  let absoluteEntry\n  try {\n    localModulePackage = require(`${appDir}/node_modules/${name}/package.json`)\n    absoluteEntry      = fs.realpathSync(`${appDir}/node_modules/${name}/${entry}`)\n  } catch (e) {\n    localModulePackage = {}\n    absoluteEntry      = false\n  }\n\n  if (localModulePackage.version && absoluteEntry) {\n    if (filename === absoluteEntry) {\n      return { type: 'symlinked', version: localModulePackage.version }\n    } else {\n      // We're entering globally and replacing this with a local instance\n      const exe = args.shift()\n      for (const i in args) {\n        // Replace the current entry, e.g. /usr/local/frey/lib/cli.js with the local package\n        if (args[i] === filename) {\n          args[i] = absoluteEntry\n        }\n      }\n      spawnSync(exe, args, { stdio: 'inherit' })\n      process.exit(0)\n      // return { type: 'local', version: localModulePackage.version }\n    }\n  } else {\n    return { type: 'local', version: version }\n  }\n}\n\nmodule.exports.dockerCmd = ({cacheDir, projectDir, lanyonVersion}, cmd, flags) => {\n  if (!flags) {\n    flags = ''\n  }\n  return oneLine`\n    docker run\n      ${flags}\n      --rm\n      --workdir ${cacheDir}\n      --user $(id -u)\n      --volume ${cacheDir}:${cacheDir}\n      --volume ${projectDir}:${projectDir}\n    kevinvz/lanyon:${lanyonVersion}\n    ${cmd}\n  `\n}\n\nmodule.exports.upwardDirContaining = (find, cwd, not) => {\n  if (!cwd) {\n    cwd = process.env.PWD || process.cwd()\n  }\n  const parts = cwd.split('/')\n  while (parts.length) {\n    const newParts = parts\n    const ppath = `${newParts.join('/')}/${find}`\n    if (fs.existsSync(ppath)) {\n      if (not === undefined || not !== path.basename(path.dirname(ppath))) {\n        return path.dirname(ppath)\n      }\n    }\n    parts.pop()\n  }\n  return false\n}\n\nmodule.exports.initProject = ({assetsBuildDir, gitRoot, cacheDir, binDir}) => {\n  if (!fs.existsSync(assetsBuildDir)) {\n    shell.mkdir('-p', assetsBuildDir)\n    shell.exec(`cd \"${path.dirname(gitRoot)}\" && git ignore \"${path.relative(gitRoot, assetsBuildDir)}\"`)\n  }\n  if (!fs.existsSync(cacheDir)) {\n    shell.mkdir('-p', cacheDir)\n    shell.exec(`cd \"${path.dirname(gitRoot)}\" && git ignore \"${path.relative(gitRoot, cacheDir)}\"`)\n  }\n  if (!fs.existsSync(binDir)) {\n    shell.mkdir('-p', binDir)\n    shell.exec(`cd \"${path.dirname(gitRoot)}\" && git ignore \"${path.relative(gitRoot, binDir)}\"`)\n  }\n}\n\nmodule.exports.fsCopySync = (src, dst, { mode = '644', encoding = 'utf-8' } = {}) => {\n  fs.writeFileSync(`${dst}`, fs.readFileSync(`${src}`, 'utf-8'), { mode, encoding })\n}\n\nmodule.exports.writeConfig = (cfg) => {\n  if (!fs.existsSync(`${cfg.runtime.cacheDir}/jekyll.lanyon_assets.yml`)) {\n    fs.writeFileSync(`${cfg.runtime.cacheDir}/jekyll.lanyon_assets.yml`, '# this file should be overwritten by the Webpack AssetsPlugin', 'utf-8')\n  }\n  utils.fsCopySync(`${cfg.runtime.lanyonDir}/Gemfile.lock`, `${cfg.runtime.cacheDir}/Gemfile.lock`)\n  fs.writeFileSync(`${cfg.runtime.cacheDir}/jekyll.config.yml`, yaml.safeDump(cfg.jekyll), 'utf-8')\n  fs.writeFileSync(`${cfg.runtime.cacheDir}/nodemon.config.json`, JSON.stringify(cfg.nodemon, null, '  '), 'utf-8')\n  fs.writeFileSync(`${cfg.runtime.cacheDir}/full-config-dump.json`, JSON.stringify(cfg, null, '  '), 'utf-8')\n  fs.writeFileSync(`${cfg.runtime.cacheDir}/browsersync.config.js`, `module.exports = require(\"${cfg.runtime.lanyonDir}/lib/config.js\").browsersync`, 'utf-8')\n  fs.writeFileSync(`${cfg.runtime.cacheDir}/webpack.config.js`, `module.exports = require(\"${cfg.runtime.lanyonDir}/lib/config.js\").webpack`, 'utf-8')\n  fs.writeFileSync(cfg.runtime.recordsPath, JSON.stringify({}, null, '  '), 'utf-8')\n\n  let dBuf = stripIndent`\n    FROM ruby:2.3.3-alpine\n    RUN mkdir -p /jekyll\n    WORKDIR /jekyll\n    COPY Gemfile /jekyll/\n    COPY Gemfile.lock /jekyll/\n    RUN true \\\\\n      && apk --update add make gcc g++ \\\\\n      && (bundler install --force --path /jekyll/vendor/bundler || bundler update) \\\\\n      && apk del make gcc g++ \\\\\n      && rm -rf /var/cache/apk/* \\\\\n      && true\n  `\n  fs.writeFileSync(`${cfg.runtime.cacheDir}/Dockerfile`, dBuf, 'utf-8')\n\n  let gBuf = `source 'https://rubygems.org'\\n`\n  for (let name in cfg.runtime.gems) {\n    gBuf += `gem '${name}', '${cfg.runtime.gems[name]}'\\n`\n  }\n  fs.writeFileSync(path.join(cfg.runtime.cacheDir, 'Gemfile'), gBuf, 'utf-8')\n}\n\nmodule.exports.satisfied = ({prerequisites, rubyProvidersSkip}, app, cmd, checkOn) => {\n  let tag = ''\n  if (checkOn === undefined) {\n    checkOn = app\n  } else {\n    tag = `${checkOn}/`\n  }\n\n  if (rubyProvidersSkip.indexOf(checkOn) !== -1) {\n    scrolex.failure(`${tag}${app} '${prerequisites[app].range} disabled via LANYON_SKIP`)\n    return false\n  }\n\n  if (!cmd) {\n    cmd = `${app} -v`\n  }\n\n  const p              = shell.exec(cmd, { 'silent': true })\n  const appVersionFull = p.stdout.trim() || p.stderr.trim()\n  const parts          = appVersionFull.split(/[,p\\s-]+/)\n  let appVersion       = parts[1]\n\n  if (app === 'node') {\n    appVersion = parts[0]\n  } else if (app === 'bundler') {\n    appVersion = parts[2]\n  } else if (app === 'docker') {\n    appVersion = parts[2]\n  }\n\n  try {\n    if (semver.satisfies(appVersion, prerequisites[app].range)) {\n      scrolex.stick(`${tag}${app} '${prerequisites[app].range} available`)\n      return true\n    }\n  } catch (e) {\n    scrolex.failure(`${tag}${app} '${prerequisites[app].range} unavailable. output: ${appVersionFull}. ${e}`)\n    return false\n  }\n\n  scrolex.failure(`${tag}${app} '${prerequisites[app].range} unavailable. output: ${appVersionFull}`)\n  return false\n}\n"]}