{"version":3,"sources":["../src/utils.js"],"names":["semver","require","chalk","fs","path","yaml","shell","no","red","yes","green","spawnSync","module","exports","preferLocalPackage","args","filename","appDir","name","entry","version","localModulePackage","absoluteEntry","realpathSync","e","console","log","exe","shift","i","stdio","process","exit","dockerCmd","cmd","flags","cacheDir","projectDir","lanyonVersion","join","upwardDirContaining","find","cwd","not","env","PWD","parts","split","length","newParts","ppath","test","undefined","basename","dirname","pop","initProject","assetsBuildDir","gitRoot","binDir","mkdir","exec","relative","writeConfig","cfg","runtime","writeFileSync","safeDump","jekyll","JSON","stringify","nodemon","lanyonDir","recordsPath","dBuf","gBuf","gems","satisfied","app","checkOn","prerequisites","rubyProvidersSkip","tag","stdout","write","range","indexOf","appVersionFull","trim","appVersion","satisfies"],"mappings":"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","file":"utils.js","sourcesContent":["const semver = require('semver')\nconst chalk = require('chalk')\nconst fs = require('fs')\n// const _ = require('lodash')\nconst path = require('path')\n// const Scrolex = require('scrolex')\nconst yaml = require('js-yaml')\nconst shell = require('shelljs')\nconst no = chalk.red('✗ ')\nconst yes = chalk.green('✓ ')\nconst spawnSync = require('spawn-sync')\n\nmodule.exports.preferLocalPackage = (args, filename, appDir, name, entry, version) => {\n  let localModulePackage\n  let absoluteEntry\n  try {\n    localModulePackage = require(`${appDir}/node_modules/${name}/package.json`)\n    absoluteEntry      = fs.realpathSync(`${appDir}/node_modules/${name}/${entry}`)\n  } catch (e) {\n    localModulePackage = {}\n    absoluteEntry      = false\n  } finally {\n    if (localModulePackage.version && absoluteEntry) {\n      if (filename === absoluteEntry) {\n        console.log(`--> Booting symlinked ${name} v${localModulePackage.version}`)\n      } else {\n        console.log(`--> Booting local ${name} v${localModulePackage.version}`)\n        const exe = args.shift()\n        for (const i in args) {\n          // Replace the current entry, e.g. /usr/local/frey/lib/cli.js with the local package\n          if (args[i] === filename) {\n            args[i] = absoluteEntry\n          }\n        }\n        spawnSync(exe, args, { stdio: 'inherit' })\n        process.exit(0)\n      }\n    } else {\n      console.log(`--> Booting local ${name} v${version}`)\n    }\n  }\n}\n\nmodule.exports.dockerCmd = ({cacheDir, projectDir, lanyonVersion}, cmd, flags) => {\n  if (!flags) {\n    flags = ''\n  }\n  return [\n    'docker run',\n    ` ${flags}`,\n    ' --rm',\n    ` --workdir ${cacheDir}`,\n    ' --user $(id -u)',\n    ` --volume ${cacheDir}:${cacheDir}`,\n    ` --volume ${projectDir}:${projectDir}`,\n    ` kevinvz/lanyon:${lanyonVersion}`,\n    ` ${cmd}`,\n  ].join('')\n}\n\nmodule.exports.upwardDirContaining = (find, cwd, not) => {\n  if (!cwd) {\n    cwd = process.env.PWD || process.cwd()\n  }\n  const parts = cwd.split('/')\n  while (parts.length) {\n    const newParts = parts\n    const ppath = `${newParts.join('/')}/${find}`\n    if (shell.test('-f', ppath) || shell.test('-d', ppath)) {\n      if (not === undefined || not !== path.basename(path.dirname(ppath))) {\n        return path.dirname(ppath)\n      }\n    }\n    parts.pop()\n  }\n  return false\n}\n\nmodule.exports.initProject = ({assetsBuildDir, gitRoot, cacheDir, binDir}) => {\n  if (!shell.test('-d', assetsBuildDir)) {\n    shell.mkdir('-p', assetsBuildDir)\n    shell.exec(`cd ${path.dirname(gitRoot)} && git ignore ${path.relative(gitRoot, assetsBuildDir)}`)\n  }\n  if (!shell.test('-d', cacheDir)) {\n    shell.mkdir('-p', cacheDir)\n    shell.exec(`cd ${path.dirname(gitRoot)} && git ignore ${path.relative(gitRoot, cacheDir)}`)\n  }\n  if (!shell.test('-d', binDir)) {\n    shell.mkdir('-p', binDir)\n    shell.exec(`cd ${path.dirname(gitRoot)} && git ignore ${path.relative(gitRoot, binDir)}`)\n  }\n}\n\nmodule.exports.writeConfig = cfg => {\n  if (!shell.test('-f', `${cfg.runtime.cacheDir}/jekyll.lanyon_assets.yml`)) {\n    fs.writeFileSync(`${cfg.runtime.cacheDir}/jekyll.lanyon_assets.yml`, '# this file should be overwritten by the Webpack AssetsPlugin', 'utf-8')\n  }\n  fs.writeFileSync(`${cfg.runtime.cacheDir}/jekyll.config.yml`, yaml.safeDump(cfg.jekyll), 'utf-8')\n  fs.writeFileSync(`${cfg.runtime.cacheDir}/nodemon.config.json`, JSON.stringify(cfg.nodemon, null, '  '), 'utf-8')\n  fs.writeFileSync(`${cfg.runtime.cacheDir}/full-config-dump.json`, JSON.stringify(cfg, null, '  '), 'utf-8')\n  fs.writeFileSync(`${cfg.runtime.cacheDir}/browsersync.config.js`, `module.exports = require(\"${cfg.runtime.lanyonDir}/lib/config.js\").browsersync`, 'utf-8')\n  fs.writeFileSync(`${cfg.runtime.cacheDir}/webpack.config.js`, `module.exports = require(\"${cfg.runtime.lanyonDir}/lib/config.js\").webpack`, 'utf-8')\n  fs.writeFileSync(cfg.runtime.recordsPath, JSON.stringify({}, null, '  '), 'utf-8')\n\n  let dBuf = ''\n  dBuf    += 'FROM ruby:2.3.3-alpine\\n'\n  dBuf    += 'RUN mkdir -p /jekyll\\n'\n  dBuf    += 'WORKDIR /jekyll\\n'\n  dBuf    += 'COPY Gemfile /jekyll/\\n'\n  dBuf    += 'RUN true \\\\\\n'\n  dBuf    += '  && apk --update add make gcc g++ \\\\\\n'\n  dBuf    += '  && bundler install --path /jekyll/vendor/bundler \\\\\\n'\n  dBuf    += '  && bundler update \\\\\\n'\n  dBuf    += '  && apk del make gcc g++ \\\\\\n'\n  dBuf    += '  && rm -rf /var/cache/apk/* \\\\\\n'\n  dBuf    += '  && true\\n'\n  fs.writeFileSync(`${cfg.runtime.cacheDir}/Dockerfile`, dBuf, 'utf-8')\n\n  let gBuf = 'source \\'https://rubygems.org\\'\\n'\n  for (const name in cfg.runtime.gems) {\n    const version = cfg.runtime.gems[name]\n    gBuf         += `gem '${name}', '${version}'\\n`\n  }\n  fs.writeFileSync(path.join(cfg.runtime.cacheDir, 'Gemfile'), gBuf, 'utf-8')\n}\n\nmodule.exports.satisfied = ({prerequisites, rubyProvidersSkip}, app, cmd, checkOn) => {\n  let tag = ''\n  if (checkOn === undefined) {\n    checkOn = app\n  } else {\n    tag = `${checkOn}/`\n  }\n\n  process.stdout.write(`--> Checking: ${tag}${app} '${prerequisites[app].range}' ... `)\n\n  if (rubyProvidersSkip.indexOf(checkOn) !== -1) {\n    console.log(`${no} (disabled via LANYON_SKIP)`)\n    return false\n  }\n\n  if (!cmd) {\n    cmd = `${app} -v`\n  }\n\n  const appVersionFull = shell.exec(cmd, { 'silent': false }).stdout.trim()\n  const parts = appVersionFull.split(/[,p\\s-]+/)\n  let appVersion = parts[1]\n\n  if (app === 'node') {\n    appVersion = parts[0]\n  } else if (app === 'bundler') {\n    appVersion = parts[2]\n  } else if (app === 'docker') {\n    appVersion = parts[2]\n  }\n\n  try {\n    if (semver.satisfies(appVersion, prerequisites[app].range)) {\n      console.log(`${yes + appVersion} (${appVersionFull})`)\n      return true\n    }\n  } catch (e) {\n    console.log(`${no + cmd} returned: \"${appVersionFull}\". ${e}`)\n    return false\n  }\n\n  console.log(`${no + appVersion} (${appVersionFull})`)\n  return false\n}\n"]}