{"version":3,"sources":["../src/encrypt.js"],"names":["scrolex","require","persistOpts","announce","addCommandAsComponent","components","main","module","failure","process","argv","exit","exports","runtime","cb","exe","cwd","gitRoot","ghPagesEnv","GHPAGES_URL","Error","key"],"mappings":";;AAAA;AACA,IAAMA,UAAUC,QAAQ,SAAR,EAAmBC,WAAnB,CAA+B;AAC7CC,YAAuB,IADsB;AAE7CC,yBAAuB,IAFsB;AAG7CC;AAH6C,CAA/B,CAAhB;;AAMA,IAAIJ,QAAQK,IAAR,KAAiBC,MAArB,EAA6B;AAC3BP,UAAQQ,OAAR,+DAA4EC,QAAQC,IAAR,CAAa,CAAb,CAA5E;AACAD,UAAQE,IAAR,CAAa,CAAb;AACD;;AAEDJ,OAAOK,OAAP,GAAiB,UAACC,OAAD,EAAUC,EAAV,EAAiB;AAChCd,UAAQe,GAAR,CAAY,0EAAZ,EAAwF,EAAEC,KAAKH,QAAQI,OAAf,EAAwBZ,YAAY,gBAApC,EAAxF;;AAEA,MAAI,CAACQ,QAAQK,UAAR,CAAmBC,WAAxB,EAAqC;AACnC,WAAOL,GAAG,IAAIM,KAAJ,CAAU,uDAAV,CAAH,CAAP;AACD;;AAED,OAAK,IAAMC,GAAX,IAAkBR,QAAQK,UAA1B,EAAsC;AACpC,QAAIL,QAAQK,UAAR,CAAmBG,GAAnB,CAAJ,EAA6B;AAC3BrB,cAAQe,GAAR,2DAAoEM,GAApE,UAA4EA,GAA5E,EAAmF,EAAEL,KAAKH,QAAQI,OAAf,EAAwBZ,YAAY,gBAApC,EAAnF;AACD;AACF;;AAEDS,KAAG,IAAH;AACD,CAdD;;;;;;;;gCAXMd,O","file":"encrypt.js","sourcesContent":["// const utils = require('./utils')\nconst scrolex = require('scrolex').persistOpts({\n  announce             : true,\n  addCommandAsComponent: true,\n  components           : `lanyon>encrypt`,\n})\n\nif (require.main === module) {\n  scrolex.failure(`Please only used this module via require, or: src/cli.js ${process.argv[1]}`)\n  process.exit(1)\n}\n\nmodule.exports = (runtime, cb) => {\n  scrolex.exe('[ -f env.sh ] || (touch env.sh && chmod 600 env.sh && git ignore env.sh)', { cwd: runtime.gitRoot, components: 'lanyon>encrypt' })\n\n  if (!runtime.ghPagesEnv.GHPAGES_URL) {\n    return cb(new Error('GHPAGES_URL was not set. Did you source env.sh first?'))\n  }\n\n  for (const key in runtime.ghPagesEnv) {\n    if (runtime.ghPagesEnv[key]) {\n      scrolex.exe(`travis encrypt --skip-version-check --add env.global ${key}=$${key}`, { cwd: runtime.gitRoot, components: 'lanyon>encrypt' })\n    }\n  }\n\n  cb(null)\n}\n"]}