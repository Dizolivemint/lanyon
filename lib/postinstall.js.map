{"version":3,"sources":["../src/postinstall.js"],"names":["chalk","require","path","utils","shell","os","fs","yes","green","Scrolex","module","exports","runtime","cb","envPrefix","passEnv","rubyProvider","lanyonReset","console","log","rm","binDir","satisfied","exit","buff","readFileSync","trim","indexOf","prerequisites","ruby","exe","replace","writeShim","versionCheck","exeSuffix","gem","bundler","undefined","which","stdout","process","env","DOCKER_BUILD","cache","DOCKER_RESET","lanyonVersion","components","sh","dockerCmd","jekyll","exec","code","preferred","error","bunderInstaller","push","cacheDir","GEM_HOME","GEM_PATH","Object","keys","length","vals","key","val","join","platform","name","p","shim","dash","shimPath","write","writeFileSync","projectDir"],"mappings":"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","file":"postinstall.js","sourcesContent":["const chalk  = require('chalk')\nconst path   = require('path')\nconst utils  = require('./utils')\nconst shell  = require('shelljs')\nconst os     = require('os')\nconst fs     = require('fs')\n// var debug = require('depurar')('lanyon')\nconst yes    = chalk.green('✓ ')\n// var no    = chalk.red('✗ ')\nconst Scrolex = require('scrolex')\n\nmodule.exports = (runtime, cb) => {\n  let envPrefix    = ''\n  const passEnv    = {}\n  let rubyProvider = ''\n\n  if (runtime.lanyonReset) {\n    console.log('--> Removing existing shims')\n    shell.rm('-f', `${runtime.binDir}/*`)\n  }\n\n  if (!utils.satisfied(runtime, 'node')) {\n    shell.exit(1)\n  }\n\n  // Detmine optimal rubyProvider and adjust shim configuration\n  if (utils.satisfied(runtime, 'ruby', `${runtime.binDir}/ruby -v`, 'ruby-shim')) {\n    const buff = fs.readFileSync(`${runtime.binDir}/ruby`, 'utf-8').trim()\n    if (buff.indexOf('docker') !== -1) {\n      rubyProvider = 'docker'\n    } else if (buff.indexOf('rvm') !== -1) {\n      rubyProvider = 'rvm'\n    } else if (buff.indexOf('rbenv') !== -1) {\n      rubyProvider = 'rbenv'\n    } else {\n      rubyProvider = 'system'\n    }\n    console.log(`--> Found a working shim - determined to be a \"${rubyProvider}\" rubyProvider`)\n    runtime.prerequisites.ruby.exe          = fs.readFileSync(`${runtime.binDir}/ruby`, 'utf-8').trim().replace(' $*', '')\n    runtime.prerequisites.ruby.writeShim    = false\n    runtime.prerequisites.ruby.versionCheck = `${runtime.prerequisites.ruby.exe} -v${runtime.prerequisites.ruby.exeSuffix}`\n    runtime.prerequisites.gem.exe           = fs.readFileSync(`${runtime.binDir}/gem`, 'utf-8').trim().replace(' $*', '')\n    runtime.prerequisites.gem.writeShim     = false\n    runtime.prerequisites.bundler.exe       = `${runtime.binDir}/bundler` // <-- not a lanyon shim, it's a real gem bin\n    runtime.prerequisites.bundler.writeShim = false\n  } else if (utils.satisfied(runtime, 'ruby', undefined, 'system')) {\n    rubyProvider = 'system'\n    runtime.prerequisites.gem.exe     = shell.which('gem').stdout\n    runtime.prerequisites.bundler.exe = shell.which('bundler').stdout\n  } else if (utils.satisfied(runtime, 'docker')) {\n    rubyProvider = 'docker'\n    if (process.env.DOCKER_BUILD === '1') {\n      const cache = process.env.DOCKER_RESET === '1' ? ' --no-cache' : ''\n      Scrolex.exe(`cd .lanyon && docker build${cache} -t kevinvz/lanyon:${runtime.lanyonVersion} .`, { components: 'lanyon>postinstall>docker>build' })\n      Scrolex.exe(`cd .lanyon && docker push kevinvz/lanyon:${runtime.lanyonVersion}`, { components: 'lanyon>postinstall>docker>push' })\n    }\n    runtime.prerequisites.sh.exe     = utils.dockerCmd(runtime, 'sh', '--interactive --tty')\n    runtime.prerequisites.ruby.exe   = utils.dockerCmd(runtime, 'ruby')\n    runtime.prerequisites.jekyll.exe = utils.dockerCmd(runtime, 'bundler exec jekyll')\n  } else if (utils.satisfied(runtime, 'rbenv') && shell.exec('rbenv install --help', { 'silent': false }).code === 0) {\n    // rbenv does not offer installing of rubies by default, it will also require the install plugin --^\n    rubyProvider = 'rbenv'\n    Scrolex.exe(`bash -c \"rbenv install --skip-existing '${runtime.prerequisites.ruby.preferred}'\"`, { components: 'lanyon>postinstall>rbenv>install' })\n    runtime.prerequisites.ruby.exe          = `bash -c \"eval $(rbenv init -) && rbenv shell '${runtime.prerequisites.ruby.preferred}' &&`\n    runtime.prerequisites.ruby.exeSuffix    = '\"'\n    runtime.prerequisites.ruby.versionCheck = `${runtime.prerequisites.ruby.exe}ruby -v${runtime.prerequisites.ruby.exeSuffix}`\n  } else if (utils.satisfied(runtime, 'rvm')) {\n    rubyProvider = 'rvm'\n    Scrolex.exe(`bash -c \"rvm install '${runtime.prerequisites.ruby.preferred}'\"`, { components: 'lanyon>postinstall>rvm>install' })\n    runtime.prerequisites.ruby.exe          = `bash -c \"rvm '${runtime.prerequisites.ruby.preferred}' exec`\n    runtime.prerequisites.ruby.exeSuffix    = '\"'\n    runtime.prerequisites.ruby.versionCheck = `${runtime.prerequisites.ruby.exe} ruby -v${runtime.prerequisites.ruby.exeSuffix}`\n  } else {\n    console.error('Ruby version not satisfied, and exhausted ruby version installer helpers (rvm, rbenv, brew)')\n    process.exit(1)\n  }\n\n  // Verify Ruby\n  if (!utils.satisfied(runtime, 'ruby', runtime.prerequisites.ruby.versionCheck, 'verify')) {\n    console.error('Ruby should have been installed but still not satisfied')\n    process.exit(1)\n  }\n\n  if (rubyProvider !== 'docker') {\n    // Install Bundler\n    runtime.prerequisites.bundler.exe = `${runtime.prerequisites.ruby.exe} ${runtime.prerequisites.bundler.exe}`\n    if (!utils.satisfied(runtime, 'bundler', `${runtime.prerequisites.bundler.exe} -v${runtime.prerequisites.ruby.exeSuffix}`)) {\n      const bunderInstaller = []\n\n      bunderInstaller.push(`cd ${runtime.cacheDir}`)\n      bunderInstaller.push('&&')\n      bunderInstaller.push(`${runtime.prerequisites.ruby.exe} ${runtime.prerequisites.gem.exe} install`)\n      if (rubyProvider === 'system') {\n        bunderInstaller.push(`--binDir ${runtime.binDir}`)\n        bunderInstaller.push('--install-dir vendor/gem_home')\n      }\n      bunderInstaller.push('--no-rdoc')\n      bunderInstaller.push('--no-ri')\n      bunderInstaller.push('bundler')\n      bunderInstaller.push(`-v '${runtime.prerequisites.bundler.preferred}'${runtime.prerequisites.ruby.exeSuffix}`)\n\n      Scrolex.exe(bunderInstaller, { components: 'lanyon>postinstall>bundler>install' })\n\n      if (rubyProvider === 'system') {\n        runtime.prerequisites.bundler.exe = `${runtime.binDir}/bundler`\n        passEnv.GEM_HOME = 'vendor/gem_home'\n        passEnv.GEM_PATH = 'vendor/gem_home'\n\n        if (Object.keys(passEnv).length > 0) {\n          const vals = []\n          for (const key in passEnv) {\n            const val = passEnv[key]\n            vals.push(`${key}=${val}`)\n          }\n          envPrefix = `env ${vals.join(' ')} `\n        }\n\n        runtime.prerequisites.bundler.exe = envPrefix + runtime.prerequisites.bundler.exe\n      }\n    }\n\n    // Configure Bundler (nokogiri)\n    if (os.platform() === 'darwin' && shell.exec('brew -v', { 'silent': true }).code === 0) {\n      Scrolex.exe([\n        'cd',\n        runtime.cacheDir,\n        '&&',\n        '(',\n        'brew install libxml2;',\n        runtime.prerequisites.bundler.exe,\n        'config build.nokogiri',\n        '--use-system-libraries',\n        `--with-xml2-include=$(brew --prefix libxml2 | sed 's@_[0-9]*$@@')/include/libxml2${runtime.prerequisites.ruby.exeSuffix}`,\n        ')',\n      ].join(' '), { components: 'lanyon>postinstall>bundler>configure' })\n    } else {\n      Scrolex.exe([\n        'cd',\n        runtime.cacheDir,\n        '&&',\n        runtime.prerequisites.bundler.exe,\n        'config build.nokogiri',\n        `--use-system-libraries${runtime.prerequisites.ruby.exeSuffix}`,\n      ].join(' '), { components: 'lanyon>postinstall>bundler>configure' })\n    }\n\n    runtime.prerequisites.jekyll.exe = `${runtime.prerequisites.bundler.exe} exec jekyll`\n\n    // Install Gems from Gemfile bundle\n    Scrolex.exe([\n      'cd',\n      runtime.cacheDir,\n      '&&',\n      '(',\n      runtime.prerequisites.bundler.exe,\n      'install',\n      `--binstubs='${runtime.binDir}'`,\n      `--path 'vendor/bundler'${runtime.prerequisites.ruby.exeSuffix}`,\n      '||',\n      runtime.prerequisites.bundler.exe,\n      `update${runtime.prerequisites.ruby.exeSuffix}`,\n      ')',\n    ].join(' '), { components: 'lanyon>postinstall>gems>install' })\n  }\n\n  // Write shims\n  for (const name in runtime.prerequisites) {\n    const p = runtime.prerequisites[name]\n    if (p.writeShim) {\n      let shim = `${envPrefix + p.exe.trim()} $*${runtime.prerequisites.ruby.exeSuffix}\\n`\n      if (name === 'dash') {\n        shim = `${envPrefix + p.exe.trim()} $*${runtime.prerequisites.dash.exeSuffix}\\n`\n      }\n      var shimPath = path.join(runtime.binDir, name)\n      process.stdout.write(`--> Installing: ${name} shim to: ${shimPath} ... `)\n      fs.writeFileSync(shimPath, shim, { 'encoding': 'utf-8', 'mode': '755' })\n      console.log(yes)\n    }\n  }\n\n  shimPath = path.join(runtime.binDir, 'deploy')\n  process.stdout.write(`--> Installing: deploy shim to: ${shimPath} ... `)\n  fs.writeFileSync(shimPath, `#!/bin/sh -ex\\ncd \"${runtime.projectDir}\"\\n(npm run build:production || npm run web:build:production) && (npm run deploy || npm run web:deploy)`, { 'encoding': 'utf-8', 'mode': '755' })\n  console.log(yes)\n\n  cb(null)\n}\n"]}