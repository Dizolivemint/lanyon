{"version":3,"sources":["../src/deploy.js"],"names":["shell","require","fs","globby","scrolex","persistOpts","announce","addCommandAsComponent","components","main","module","failure","process","argv","exit","exports","runtime","cb","onTravis","ghPagesEnv","GHPAGES_BOTNAME","stick","exe","cwd","contentBuildDir","GHPAGES_BOTEMAIL","GHPAGES_URL","Error","sync","length","test","writeFileSync"],"mappings":";;AAAA,IAAMA,QAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,KAAUD,QAAQ,IAAR,CAAhB;AACA,IAAME,SAAUF,QAAQ,QAAR,CAAhB;AACA,IAAMG,UAAUH,QAAQ,SAAR,EAAmBI,WAAnB,CAA+B;AAC7CC,YAAuB,IADsB;AAE7CC,yBAAuB,IAFsB;AAG7CC;AAH6C,CAA/B,CAAhB;;AAMA,IAAIP,QAAQQ,IAAR,KAAiBC,MAArB,EAA6B;AAC3BN,UAAQO,OAAR,+DAA4EC,QAAQC,IAAR,CAAa,CAAb,CAA5E;AACAD,UAAQE,IAAR,CAAa,CAAb;AACD;;AAEDJ,OAAOK,OAAP,GAAiB,UAACC,OAAD,EAAUC,EAAV,EAAiB;AAChC,MAAID,QAAQE,QAAZ,EAAsB;AACpB,QAAIF,QAAQG,UAAR,CAAmBC,eAAvB,EAAwC;AACtChB,cAAQiB,KAAR,CAAc,4BAAd;AACAjB,cAAQkB,GAAR,qCAA8CN,QAAQG,UAAR,CAAmBC,eAAjE,QAAqF,EAAEG,KAAKP,QAAQQ,eAAf,EAArF;AACD;AACD,QAAIR,QAAQG,UAAR,CAAmBM,gBAAvB,EAAyC;AACvCrB,cAAQiB,KAAR,CAAc,4BAAd;AACAjB,cAAQkB,GAAR,sCAA+CN,QAAQG,UAAR,CAAmBM,gBAAlE,QAAuF,EAAEF,KAAKP,QAAQQ,eAAf,EAAvF;AACD;AACF;;AAED,MAAI,CAACR,QAAQG,UAAR,CAAmBO,WAAxB,EAAqC;AACnC,WAAOT,GAAG,IAAIU,KAAJ,CAAU,iFAAV,CAAH,CAAP;AACD;;AAED,MAAI,CAACxB,OAAOyB,IAAP,CAAeZ,QAAQQ,eAAvB,4BAA+DK,MAApE,EAA4E;AAC1E,WAAOZ,GAAG,IAAIU,KAAJ,wCAA+CX,QAAQQ,eAAvD,qDAAH,CAAP;AACD;AACD,MAAIxB,MAAM8B,IAAN,CAAW,IAAX,EAAoBd,QAAQQ,eAA5B,aAAJ,EAA2D;AACzD,WAAOP,GAAG,IAAIU,KAAJ,kCAAyCX,QAAQQ,eAAjD,+CAAH,CAAP;AACD;AACD,MAAI,CAACxB,MAAM8B,IAAN,CAAW,IAAX,EAAoBd,QAAQQ,eAA5B,WAAL,EAA0D;AACxDpB,YAAQkB,GAAR,CAAY,UAAZ,EAAwB,EAAEC,KAAKP,QAAQQ,eAAf,EAAxB;AACD;;AAEDtB,KAAG6B,aAAH,CAAoBf,QAAQQ,eAA5B,iBAAyD,6EAAzD,EAAwI,OAAxI;AACApB,UAAQkB,GAAR,CAAY,0BAAZ,EAAwC,EAAEC,KAAKP,QAAQQ,eAAf,EAAxC;AACApB,UAAQkB,GAAR,CAAY,iBAAZ,EAA+B,EAAEC,KAAKP,QAAQQ,eAAf,EAA/B;AACApB,UAAQkB,GAAR,CAAY,kDAAZ,EAAgE,EAAEC,KAAKP,QAAQQ,eAAf,EAAhE;AACApB,UAAQkB,GAAR,4BAAqCN,QAAQG,UAAR,CAAmBO,WAAxD,4BAA4F,EAAEH,KAAKP,QAAQQ,eAAf,EAA5F;AACA;AACApB,UAAQkB,GAAR,gCAAyCN,QAAQG,UAAR,CAAmBO,WAA5D,EAA2E,EAAEH,KAAKP,QAAQQ,eAAf,EAA3E;AACApB,UAAQkB,GAAR,CAAY,+HAAZ,EAA6I,EAAEC,KAAKP,QAAQQ,eAAf,EAA7I;AACAP,KAAG,IAAH;AACD,CAnCD;;;;;;;;gCAXMb,O","file":"deploy.js","sourcesContent":["const shell   = require('shelljs')\nconst fs      = require('fs')\nconst globby  = require('globby')\nconst scrolex = require('scrolex').persistOpts({\n  announce             : true,\n  addCommandAsComponent: true,\n  components           : `lanyon>deploy`,\n})\n\nif (require.main === module) {\n  scrolex.failure(`Please only used this module via require, or: src/cli.js ${process.argv[1]}`)\n  process.exit(1)\n}\n\nmodule.exports = (runtime, cb) => {\n  if (runtime.onTravis) {\n    if (runtime.ghPagesEnv.GHPAGES_BOTNAME) {\n      scrolex.stick('Setting up GHPAGES_BOTNAME')\n      scrolex.exe(`git config --global user.name \"${runtime.ghPagesEnv.GHPAGES_BOTNAME}\"`, { cwd: runtime.contentBuildDir })\n    }\n    if (runtime.ghPagesEnv.GHPAGES_BOTEMAIL) {\n      scrolex.stick('Setting up GHPAGES_BOTNAME')\n      scrolex.exe(`git config --global user.email \"${runtime.ghPagesEnv.GHPAGES_BOTEMAIL}\"`, { cwd: runtime.contentBuildDir })\n    }\n  }\n\n  if (!runtime.ghPagesEnv.GHPAGES_URL) {\n    return cb(new Error('GHPAGES_URL was not set. Did you source env.sh? Did you encrypt it with Travis?'))\n  }\n\n  if (!globby.sync(`${runtime.contentBuildDir}/assets/build/app*.js`).length) {\n    return cb(new Error(`I refuse to deploy if there is no ${runtime.contentBuildDir}/assets/build/app*.js - build:production first!`))\n  }\n  if (shell.test('-f', `${runtime.contentBuildDir}/env.sh`)) {\n    return cb(new Error(`I refuse to deploy if while ${runtime.contentBuildDir}/env.sh exists - secure your build first!`))\n  }\n  if (!shell.test('-d', `${runtime.contentBuildDir}/.git`)) {\n    scrolex.exe('git init', { cwd: runtime.contentBuildDir })\n  }\n\n  fs.writeFileSync(`${runtime.contentBuildDir}/README.md`, 'This branch is just a deploy target. Do not edit. You changes will be lost.', 'utf-8')\n  scrolex.exe('git checkout -B gh-pages', { cwd: runtime.contentBuildDir })\n  scrolex.exe('git add --all .', { cwd: runtime.contentBuildDir })\n  scrolex.exe('git commit -nm \"Update website by $USER\" || true', { cwd: runtime.contentBuildDir })\n  scrolex.exe(`git remote add origin ${runtime.ghPagesEnv.GHPAGES_URL} 2> /dev/null || true`, { cwd: runtime.contentBuildDir })\n  // required to update the token:\n  scrolex.exe(`git remote set-url origin ${runtime.ghPagesEnv.GHPAGES_URL}`, { cwd: runtime.contentBuildDir })\n  scrolex.exe('git push origin gh-pages:refs/heads/gh-pages 2> /dev/null || git push origin gh-pages:refs/heads/gh-pages --force > /dev/null', { cwd: runtime.contentBuildDir })\n  cb(null)\n}\n"]}