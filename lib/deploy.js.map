{"version":3,"sources":["../src/deploy.js"],"names":["shell","require","fs","globby","Scrolex","module","exports","runtime","cb","onTravis","ghPagesEnv","GHPAGES_BOTNAME","console","log","exe","cwd","contentBuildDir","components","GHPAGES_BOTEMAIL","GHPAGES_URL","Error","sync","length","test","writeFileSync"],"mappings":";;AAAA,IAAMA,QAAYC,QAAQ,SAAR,CAAlB;AACA,IAAMC,KAAYD,QAAQ,IAAR,CAAlB;AACA,IAAME,SAAYF,QAAQ,QAAR,CAAlB;AACA,IAAMG,UAAUH,QAAQ,SAAR,CAAhB;;AAEAI,OAAOC,OAAP,GAAiB,UAACC,OAAD,EAAUC,EAAV,EAAiB;AAChC,MAAID,QAAQE,QAAZ,EAAsB;AACpB,QAAIF,QAAQG,UAAR,CAAmBC,eAAvB,EAAwC;AACtCC,cAAQC,GAAR,CAAY,gCAAZ;AACAT,cAAQU,GAAR,qCAA8CP,QAAQG,UAAR,CAAmBC,eAAjE,QAAqF,EAAEI,KAAKR,QAAQS,eAAf,EAAgCC,YAAY,eAA5C,EAArF;AACD;AACD,QAAIV,QAAQG,UAAR,CAAmBQ,gBAAvB,EAAyC;AACvCN,cAAQC,GAAR,CAAY,gCAAZ;AACAT,cAAQU,GAAR,sCAA+CP,QAAQG,UAAR,CAAmBQ,gBAAlE,QAAuF,EAAEH,KAAKR,QAAQS,eAAf,EAAgCC,YAAY,eAA5C,EAAvF;AACD;AACF;;AAED,MAAI,CAACV,QAAQG,UAAR,CAAmBS,WAAxB,EAAqC;AACnC,WAAOX,GAAG,IAAIY,KAAJ,CAAU,iFAAV,CAAH,CAAP;AACD;;AAED,MAAI,CAACjB,OAAOkB,IAAP,CAAed,QAAQS,eAAvB,4BAA+DM,MAApE,EAA4E;AAC1E,WAAOd,GAAG,IAAIY,KAAJ,wCAA+Cb,QAAQS,eAAvD,qDAAH,CAAP;AACD;AACD,MAAIhB,MAAMuB,IAAN,CAAW,IAAX,EAAoBhB,QAAQS,eAA5B,aAAJ,EAA2D;AACzD,WAAOR,GAAG,IAAIY,KAAJ,kCAAyCb,QAAQS,eAAjD,+CAAH,CAAP;AACD;AACD,MAAI,CAAChB,MAAMuB,IAAN,CAAW,IAAX,EAAoBhB,QAAQS,eAA5B,WAAL,EAA0D;AACxDZ,YAAQU,GAAR,CAAY,UAAZ,EAAwB,EAAEC,KAAKR,QAAQS,eAAf,EAAgCC,YAAY,eAA5C,EAAxB;AACD;;AAEDf,KAAGsB,aAAH,CAAoBjB,QAAQS,eAA5B,iBAAyD,6EAAzD,EAAwI,OAAxI;AACAZ,UAAQU,GAAR,CAAY,0BAAZ,EAAwC,EAAEC,KAAKR,QAAQS,eAAf,EAAgCC,YAAY,eAA5C,EAAxC;AACAb,UAAQU,GAAR,CAAY,iBAAZ,EAA+B,EAAEC,KAAKR,QAAQS,eAAf,EAAgCC,YAAY,eAA5C,EAA/B;AACAb,UAAQU,GAAR,CAAY,kDAAZ,EAAgE,EAAEC,KAAKR,QAAQS,eAAf,EAAgCC,YAAY,eAA5C,EAAhE;AACAb,UAAQU,GAAR,4BAAqCP,QAAQG,UAAR,CAAmBS,WAAxD,4BAA4F,EAAEJ,KAAKR,QAAQS,eAAf,EAAgCC,YAAY,eAA5C,EAA5F;AACA;AACAb,UAAQU,GAAR,gCAAyCP,QAAQG,UAAR,CAAmBS,WAA5D,EAA2E,EAAEJ,KAAKR,QAAQS,eAAf,EAAgCC,YAAY,eAA5C,EAA3E;AACAb,UAAQU,GAAR,CAAY,+HAAZ,EAA6I,EAAEC,KAAKR,QAAQS,eAAf,EAAgCC,YAAY,eAA5C,EAA7I;AACAT,KAAG,IAAH;AACD,CAnCD","file":"deploy.js","sourcesContent":["const shell     = require('shelljs')\nconst fs        = require('fs')\nconst globby    = require('globby')\nconst Scrolex = require('scrolex')\n\nmodule.exports = (runtime, cb) => {\n  if (runtime.onTravis) {\n    if (runtime.ghPagesEnv.GHPAGES_BOTNAME) {\n      console.log('--> Setting up GHPAGES_BOTNAME')\n      Scrolex.exe(`git config --global user.name \"${runtime.ghPagesEnv.GHPAGES_BOTNAME}\"`, { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n    }\n    if (runtime.ghPagesEnv.GHPAGES_BOTEMAIL) {\n      console.log('--> Setting up GHPAGES_BOTNAME')\n      Scrolex.exe(`git config --global user.email \"${runtime.ghPagesEnv.GHPAGES_BOTEMAIL}\"`, { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n    }\n  }\n\n  if (!runtime.ghPagesEnv.GHPAGES_URL) {\n    return cb(new Error('GHPAGES_URL was not set. Did you source env.sh? Did you encrypt it with Travis?'))\n  }\n\n  if (!globby.sync(`${runtime.contentBuildDir}/assets/build/app*.js`).length) {\n    return cb(new Error(`I refuse to deploy if there is no ${runtime.contentBuildDir}/assets/build/app*.js - build:production first!`))\n  }\n  if (shell.test('-f', `${runtime.contentBuildDir}/env.sh`)) {\n    return cb(new Error(`I refuse to deploy if while ${runtime.contentBuildDir}/env.sh exists - secure your build first!`))\n  }\n  if (!shell.test('-d', `${runtime.contentBuildDir}/.git`)) {\n    Scrolex.exe('git init', { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n  }\n\n  fs.writeFileSync(`${runtime.contentBuildDir}/README.md`, 'This branch is just a deploy target. Do not edit. You changes will be lost.', 'utf-8')\n  Scrolex.exe('git checkout -B gh-pages', { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n  Scrolex.exe('git add --all .', { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n  Scrolex.exe('git commit -nm \"Update website by $USER\" || true', { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n  Scrolex.exe(`git remote add origin ${runtime.ghPagesEnv.GHPAGES_URL} 2> /dev/null || true`, { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n  // required to update the token:\n  Scrolex.exe(`git remote set-url origin ${runtime.ghPagesEnv.GHPAGES_URL}`, { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n  Scrolex.exe('git push origin gh-pages:refs/heads/gh-pages 2> /dev/null || git push origin gh-pages:refs/heads/gh-pages --force > /dev/null', { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n  cb(null)\n}\n"]}