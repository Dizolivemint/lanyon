{"version":3,"sources":["../src/deploy.js"],"names":["shell","require","fs","globby","scrolex","main","module","failure","process","argv","exit","exports","runtime","cb","onTravis","ghPagesEnv","GHPAGES_BOTNAME","stick","exe","cwd","contentBuildDir","components","GHPAGES_BOTEMAIL","GHPAGES_URL","Error","sync","length","test","writeFileSync"],"mappings":";;AAAA,IAAMA,QAAYC,QAAQ,SAAR,CAAlB;AACA,IAAMC,KAAYD,QAAQ,IAAR,CAAlB;AACA,IAAME,SAAYF,QAAQ,QAAR,CAAlB;AACA,IAAMG,UAAUH,QAAQ,SAAR,CAAhB;;AAEA,IAAIA,QAAQI,IAAR,KAAiBC,MAArB,EAA6B;AAC3BF,UAAQG,OAAR,+DAA4EC,QAAQC,IAAR,CAAa,CAAb,CAA5E;AACAD,UAAQE,IAAR,CAAa,CAAb;AACD;;AAEDJ,OAAOK,OAAP,GAAiB,UAACC,OAAD,EAAUC,EAAV,EAAiB;AAChC,MAAID,QAAQE,QAAZ,EAAsB;AACpB,QAAIF,QAAQG,UAAR,CAAmBC,eAAvB,EAAwC;AACtCZ,cAAQa,KAAR,CAAc,4BAAd;AACAb,cAAQc,GAAR,qCAA8CN,QAAQG,UAAR,CAAmBC,eAAjE,QAAqF,EAAEG,KAAKP,QAAQQ,eAAf,EAAgCC,YAAY,eAA5C,EAArF;AACD;AACD,QAAIT,QAAQG,UAAR,CAAmBO,gBAAvB,EAAyC;AACvClB,cAAQa,KAAR,CAAc,4BAAd;AACAb,cAAQc,GAAR,sCAA+CN,QAAQG,UAAR,CAAmBO,gBAAlE,QAAuF,EAAEH,KAAKP,QAAQQ,eAAf,EAAgCC,YAAY,eAA5C,EAAvF;AACD;AACF;;AAED,MAAI,CAACT,QAAQG,UAAR,CAAmBQ,WAAxB,EAAqC;AACnC,WAAOV,GAAG,IAAIW,KAAJ,CAAU,iFAAV,CAAH,CAAP;AACD;;AAED,MAAI,CAACrB,OAAOsB,IAAP,CAAeb,QAAQQ,eAAvB,4BAA+DM,MAApE,EAA4E;AAC1E,WAAOb,GAAG,IAAIW,KAAJ,wCAA+CZ,QAAQQ,eAAvD,qDAAH,CAAP;AACD;AACD,MAAIpB,MAAM2B,IAAN,CAAW,IAAX,EAAoBf,QAAQQ,eAA5B,aAAJ,EAA2D;AACzD,WAAOP,GAAG,IAAIW,KAAJ,kCAAyCZ,QAAQQ,eAAjD,+CAAH,CAAP;AACD;AACD,MAAI,CAACpB,MAAM2B,IAAN,CAAW,IAAX,EAAoBf,QAAQQ,eAA5B,WAAL,EAA0D;AACxDhB,YAAQc,GAAR,CAAY,UAAZ,EAAwB,EAAEC,KAAKP,QAAQQ,eAAf,EAAgCC,YAAY,eAA5C,EAAxB;AACD;;AAEDnB,KAAG0B,aAAH,CAAoBhB,QAAQQ,eAA5B,iBAAyD,6EAAzD,EAAwI,OAAxI;AACAhB,UAAQc,GAAR,CAAY,0BAAZ,EAAwC,EAAEC,KAAKP,QAAQQ,eAAf,EAAgCC,YAAY,eAA5C,EAAxC;AACAjB,UAAQc,GAAR,CAAY,iBAAZ,EAA+B,EAAEC,KAAKP,QAAQQ,eAAf,EAAgCC,YAAY,eAA5C,EAA/B;AACAjB,UAAQc,GAAR,CAAY,kDAAZ,EAAgE,EAAEC,KAAKP,QAAQQ,eAAf,EAAgCC,YAAY,eAA5C,EAAhE;AACAjB,UAAQc,GAAR,4BAAqCN,QAAQG,UAAR,CAAmBQ,WAAxD,4BAA4F,EAAEJ,KAAKP,QAAQQ,eAAf,EAAgCC,YAAY,eAA5C,EAA5F;AACA;AACAjB,UAAQc,GAAR,gCAAyCN,QAAQG,UAAR,CAAmBQ,WAA5D,EAA2E,EAAEJ,KAAKP,QAAQQ,eAAf,EAAgCC,YAAY,eAA5C,EAA3E;AACAjB,UAAQc,GAAR,CAAY,+HAAZ,EAA6I,EAAEC,KAAKP,QAAQQ,eAAf,EAAgCC,YAAY,eAA5C,EAA7I;AACAR,KAAG,IAAH;AACD,CAnCD","file":"deploy.js","sourcesContent":["const shell     = require('shelljs')\nconst fs        = require('fs')\nconst globby    = require('globby')\nconst scrolex = require('scrolex')\n\nif (require.main === module) {\n  scrolex.failure(`Please only used this module via require, or: src/cli.js ${process.argv[1]}`)\n  process.exit(1)\n}\n\nmodule.exports = (runtime, cb) => {\n  if (runtime.onTravis) {\n    if (runtime.ghPagesEnv.GHPAGES_BOTNAME) {\n      scrolex.stick('Setting up GHPAGES_BOTNAME')\n      scrolex.exe(`git config --global user.name \"${runtime.ghPagesEnv.GHPAGES_BOTNAME}\"`, { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n    }\n    if (runtime.ghPagesEnv.GHPAGES_BOTEMAIL) {\n      scrolex.stick('Setting up GHPAGES_BOTNAME')\n      scrolex.exe(`git config --global user.email \"${runtime.ghPagesEnv.GHPAGES_BOTEMAIL}\"`, { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n    }\n  }\n\n  if (!runtime.ghPagesEnv.GHPAGES_URL) {\n    return cb(new Error('GHPAGES_URL was not set. Did you source env.sh? Did you encrypt it with Travis?'))\n  }\n\n  if (!globby.sync(`${runtime.contentBuildDir}/assets/build/app*.js`).length) {\n    return cb(new Error(`I refuse to deploy if there is no ${runtime.contentBuildDir}/assets/build/app*.js - build:production first!`))\n  }\n  if (shell.test('-f', `${runtime.contentBuildDir}/env.sh`)) {\n    return cb(new Error(`I refuse to deploy if while ${runtime.contentBuildDir}/env.sh exists - secure your build first!`))\n  }\n  if (!shell.test('-d', `${runtime.contentBuildDir}/.git`)) {\n    scrolex.exe('git init', { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n  }\n\n  fs.writeFileSync(`${runtime.contentBuildDir}/README.md`, 'This branch is just a deploy target. Do not edit. You changes will be lost.', 'utf-8')\n  scrolex.exe('git checkout -B gh-pages', { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n  scrolex.exe('git add --all .', { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n  scrolex.exe('git commit -nm \"Update website by $USER\" || true', { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n  scrolex.exe(`git remote add origin ${runtime.ghPagesEnv.GHPAGES_URL} 2> /dev/null || true`, { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n  // required to update the token:\n  scrolex.exe(`git remote set-url origin ${runtime.ghPagesEnv.GHPAGES_URL}`, { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n  scrolex.exe('git push origin gh-pages:refs/heads/gh-pages 2> /dev/null || git push origin gh-pages:refs/heads/gh-pages --force > /dev/null', { cwd: runtime.contentBuildDir, components: 'lanyon>deploy' })\n  cb(null)\n}\n"]}