{"version":3,"sources":["../src/install.js"],"names":["require","path","utils","os","shell","fs","_","oneLine","stripIndent","scrolex","persistOpts","announce","addCommandAsComponent","components","main","module","failure","process","argv","exit","exports","runtime","cb","deps","cloneDeep","prerequisites","name","exeSuffix","exe","versionCheck","envPrefix","passEnv","rubyProvider","lanyonReset","stick","binDir","satisfied","buff","readFileSync","trim","indexOf","ruby","replace","writeShim","gem","bundler","undefined","which","stdout","env","DOCKER_BUILD","cache","DOCKER_RESET","cacheDir","lanyonVersion","sh","dockerCmd","jekyll","exec","code","preferred","localGemArgs","GEM_HOME","GEM_PATH","Object","keys","length","vals","key","val","push","join","platform","dep","shim","dash","shimPath","writeFileSync","projectDir","lanyonUpdateGemLockfile","fsCopySync","lanyonDir"],"mappings":";;;;;;;;;;;;AAAAA,QAAQ,gBAAR;AACA,IAAMC,OAAcD,QAAQ,MAAR,CAApB;AACA,IAAME,QAAcF,QAAQ,SAAR,CAApB;AACA,IAAMG,KAAcH,QAAQ,IAAR,CAApB;AACA,IAAMI,QAAcJ,QAAQ,SAAR,CAApB;AACA,IAAMK,KAAcL,QAAQ,IAAR,CAApB;AACA;AACA,IAAMM,IAAcN,QAAQ,QAAR,CAApB;AACA,IAAMO,UAAcP,QAAQ,yBAAR,CAApB;AACA,IAAMQ,cAAcR,QAAQ,6BAAR,CAApB;AACA,IAAMS,UAAcT,QAAQ,SAAR,EAAmBU,WAAnB,CAA+B;AACjDC,YAAuB,IAD0B;AAEjDC,yBAAuB,IAF0B;AAGjDC;AAHiD,CAA/B,CAApB;;AAMA,IAAIb,QAAQc,IAAR,KAAiBC,MAArB,EAA6B;AAC3BN,UAAQO,OAAR,+DAA4EC,QAAQC,IAAR,CAAa,CAAb,CAA5E;AACAD,UAAQE,IAAR,CAAa,CAAb;AACD;;AAEDJ,OAAOK,OAAP;AAAA,uDAAiB,iBAAOC,OAAP,EAAgBC,EAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACf;AACIC,gBAFW,GAEJjB,EAAEkB,SAAF,CAAYH,QAAQI,aAApB,CAFI;;AAGf,iBAAWC,IAAX,IAAmBH,IAAnB,EAAyB;AACvB,kBAAI,CAACA,KAAKG,IAAL,EAAWC,SAAhB,EAA2B;AACzBJ,qBAAKG,IAAL,EAAWC,SAAX,GAAuB,EAAvB;AACD;AACD,kBAAI,CAACJ,KAAKG,IAAL,EAAWE,GAAhB,EAAqB;AACnBL,qBAAKG,IAAL,EAAWE,GAAX,GAAiBF,IAAjB;AACD;AACD,kBAAI,CAACH,KAAKG,IAAL,EAAWG,YAAhB,EAA8B;AAC5BN,qBAAKG,IAAL,EAAWG,YAAX,GAA6BN,KAAKG,IAAL,EAAWE,GAAxC;AACD;AACF;;AAEGE,qBAfW,GAeI,EAfJ;AAgBTC,mBAhBS,GAgBI,EAhBJ;AAiBXC,wBAjBW,GAiBI,EAjBJ;;AAAA,iBAmBXX,QAAQY,WAnBG;AAAA;AAAA;AAAA;;AAoBbxB,oBAAQyB,KAAR,CAAc,yBAAd;AApBa;AAAA,mBAqBPzB,QAAQmB,GAAR,CAAeP,QAAQc,MAAvB,QArBO;;AAAA;;AAwBf,gBAAI,CAACjC,MAAMkC,SAAN,CAAgBf,OAAhB,EAAyB,MAAzB,CAAL,EAAuC;AACrCZ,sBAAQO,OAAR,CAAgB,0BAAhB;AACAC,sBAAQE,IAAR,CAAa,CAAb;AACD;;AAED;;AA7Be,iBA8BXjB,MAAMkC,SAAN,CAAgBf,OAAhB,EAAyB,MAAzB,EAAoCA,QAAQc,MAA5C,eAA8D,WAA9D,CA9BW;AAAA;AAAA;AAAA;;AA+BPE,gBA/BO,GA+BAhC,GAAGiC,YAAH,CAAmBjB,QAAQc,MAA3B,YAA0C,OAA1C,EAAmDI,IAAnD,EA/BA;;AAgCb,gBAAIF,KAAKG,OAAL,CAAa,QAAb,MAA2B,CAAC,CAAhC,EAAmC;AACjCR,6BAAe,QAAf;AACD,aAFD,MAEO,IAAIK,KAAKG,OAAL,CAAa,KAAb,MAAwB,CAAC,CAA7B,EAAgC;AACrCR,6BAAe,KAAf;AACD,aAFM,MAEA,IAAIK,KAAKG,OAAL,CAAa,OAAb,MAA0B,CAAC,CAA/B,EAAkC;AACvCR,6BAAe,OAAf;AACD,aAFM,MAEA;AACLA,6BAAe,QAAf;AACD;AACDvB,oBAAQyB,KAAR,iDAA4DF,YAA5D;AACAT,iBAAKkB,IAAL,CAAUb,GAAV,GAAyBvB,GAAGiC,YAAH,CAAmBjB,QAAQc,MAA3B,YAA0C,OAA1C,EAAmDI,IAAnD,GAA0DG,OAA1D,CAAkE,KAAlE,EAAyE,EAAzE,CAAzB;AACAnB,iBAAKkB,IAAL,CAAUE,SAAV,GAAyB,KAAzB;AACApB,iBAAKkB,IAAL,CAAUZ,YAAV,GAA4BN,KAAKkB,IAAL,CAAUb,GAAtC,WAA+CL,KAAKkB,IAAL,CAAUd,SAAzD;AACAJ,iBAAKqB,GAAL,CAAShB,GAAT,GAAyBvB,GAAGiC,YAAH,CAAmBjB,QAAQc,MAA3B,WAAyC,OAAzC,EAAkDI,IAAlD,GAAyDG,OAAzD,CAAiE,KAAjE,EAAwE,EAAxE,CAAzB;AACAnB,iBAAKqB,GAAL,CAASD,SAAT,GAAyB,KAAzB;AACApB,iBAAKsB,OAAL,CAAajB,GAAb,GAA4BP,QAAQc,MAApC,cA/Ca,CA+CwC;AACrDZ,iBAAKsB,OAAL,CAAaF,SAAb,GAAyB,KAAzB;AAhDa;AAAA;;AAAA;AAAA,iBAiDJzC,MAAMkC,SAAN,CAAgBf,OAAhB,EAAyB,MAAzB,EAAiCyB,SAAjC,EAA4C,QAA5C,CAjDI;AAAA;AAAA;AAAA;;AAkDbd,2BAAe,QAAf;AACAT,iBAAKqB,GAAL,CAAShB,GAAT,GAAmBxB,MAAM2C,KAAN,CAAY,KAAZ,EAAmBC,MAAtC;AACAzB,iBAAKsB,OAAL,CAAajB,GAAb,GAAmBxB,MAAM2C,KAAN,CAAY,SAAZ,EAAuBC,MAA1C;AApDa;AAAA;;AAAA;AAAA,iBAqDJ9C,MAAMkC,SAAN,CAAgBf,OAAhB,EAAyB,QAAzB,CArDI;AAAA;AAAA;AAAA;;AAsDbW,2BAAe,QAAf;;AAtDa,kBAuDTf,QAAQgC,GAAR,CAAYC,YAAZ,KAA6B,GAvDpB;AAAA;AAAA;AAAA;;AAwDLC,iBAxDK,GAwDGlC,QAAQgC,GAAR,CAAYG,YAAZ,KAA6B,GAA7B,GAAmC,aAAnC,GAAmD,EAxDtD;AAAA;AAAA,mBAyDL3C,QAAQmB,GAAR,UAAmBP,QAAQgC,QAA3B,yBAAuDF,KAAvD,2BAAkF9B,QAAQiC,aAA1F,QAzDK;;AAAA;AAAA;AAAA,mBA0DL7C,QAAQmB,GAAR,UAAmBP,QAAQgC,QAA3B,wCAAsEhC,QAAQiC,aAA9E,CA1DK;;AAAA;AA4Db/B,iBAAKgC,EAAL,CAAQ3B,GAAR,GAAkB1B,MAAMsD,SAAN,CAAgBnC,OAAhB,EAAyB,IAAzB,EAA+B,qBAA/B,CAAlB;AACAE,iBAAKkB,IAAL,CAAUb,GAAV,GAAkB1B,MAAMsD,SAAN,CAAgBnC,OAAhB,EAAyB,MAAzB,CAAlB;AACAE,iBAAKkC,MAAL,CAAY7B,GAAZ,GAAkB1B,MAAMsD,SAAN,CAAgBnC,OAAhB,EAAyB,qBAAzB,CAAlB;AA9Da;AAAA;;AAAA;AAAA,kBA+DJnB,MAAMkC,SAAN,CAAgBf,OAAhB,EAAyB,OAAzB,KAAqCjB,MAAMsD,IAAN,CAAW,sBAAX,EAAmC,EAAE,UAAU,IAAZ,EAAnC,EAAuDC,IAAvD,KAAgE,CA/DjG;AAAA;AAAA;AAAA;;AAgEb;AACA3B,2BAAe,OAAf;AAjEa;AAAA,mBAkEPvB,QAAQmB,GAAR,+CAAuDL,KAAKkB,IAAL,CAAUmB,SAAjE,SAlEO;;AAAA;AAmEbrC,iBAAKkB,IAAL,CAAUb,GAAV,uDAA0EL,KAAKkB,IAAL,CAAUmB,SAApF;AACArC,iBAAKkB,IAAL,CAAUd,SAAV,GAAyB,GAAzB;AACAJ,iBAAKkB,IAAL,CAAUZ,YAAV,GAA4BN,KAAKkB,IAAL,CAAUb,GAAtC,eAAmDL,KAAKkB,IAAL,CAAUd,SAA7D;AArEa;AAAA;;AAAA;AAAA,iBAsEJzB,MAAMkC,SAAN,CAAgBf,OAAhB,EAAyB,KAAzB,CAtEI;AAAA;AAAA;AAAA;;AAuEbW,2BAAe,KAAf;AAvEa;AAAA,mBAwEPvB,QAAQmB,GAAR,6BAAqCL,KAAKkB,IAAL,CAAUmB,SAA/C,SAxEO;;AAAA;AAyEbrC,iBAAKkB,IAAL,CAAUb,GAAV,uBAA0CL,KAAKkB,IAAL,CAAUmB,SAApD;AACArC,iBAAKkB,IAAL,CAAUd,SAAV,GAAyB,GAAzB;AACAJ,iBAAKkB,IAAL,CAAUZ,YAAV,GAA4BN,KAAKkB,IAAL,CAAUb,GAAtC,gBAAoDL,KAAKkB,IAAL,CAAUd,SAA9D;AA3Ea;AAAA;;AAAA;AA6EblB,oBAAQO,OAAR,CAAgB,6FAAhB;AACAC,oBAAQE,IAAR,CAAa,CAAb;;AA9Ea;;AAiFf;AACA,gBAAI,CAACjB,MAAMkC,SAAN,CAAgBf,OAAhB,EAAyB,MAAzB,EAAiCE,KAAKkB,IAAL,CAAUZ,YAA3C,EAAyD,QAAzD,CAAL,EAAyE;AACvEpB,sBAAQO,OAAR,CAAgB,yDAAhB;AACAC,sBAAQE,IAAR,CAAa,CAAb;AACD;;AArFc,kBAuFXa,iBAAiB,QAvFN;AAAA;AAAA;AAAA;;AAwFb;AACAT,iBAAKsB,OAAL,CAAajB,GAAb,GAAsBL,KAAKkB,IAAL,CAAUb,GAAhC,SAAuCL,KAAKsB,OAAL,CAAajB,GAApD;;AAzFa,gBA0FR1B,MAAMkC,SAAN,CAAgBf,OAAhB,EAAyB,SAAzB,EAAuCE,KAAKsB,OAAL,CAAajB,GAApD,WAA6DL,KAAKkB,IAAL,CAAUd,SAAvE,CA1FQ;AAAA;AAAA;AAAA;;AA2FPkC,wBA3FO,GA2FQ,EA3FR;;AA4FX,gBAAI7B,iBAAiB,QAArB,EAA+B;AAC7B6B,6CAA4BxC,QAAQc,MAApC;AACD;;AA9FU;AAAA,mBAgGL1B,QAAQmB,GAAR,CAAYrB,OAAZ,kBACEc,QAAQgC,QADV,EAEA9B,KAAKkB,IAAL,CAAUb,GAFV,EAEiBL,KAAKqB,GAAL,CAAShB,GAF1B,EAEyCiC,YAFzC,EAKYtC,KAAKsB,OAAL,CAAae,SALzB,EAMArC,KAAKkB,IAAL,CAAUd,SANV,EAhGK;;AAAA;;AA0GX,gBAAIK,iBAAiB,QAArB,EAA+B;AAC7BT,mBAAKsB,OAAL,CAAajB,GAAb,GAAsBP,QAAQc,MAA9B;AACAJ,sBAAQ+B,QAAR,GAAmB,iBAAnB;AACA/B,sBAAQgC,QAAR,GAAmB,iBAAnB;;AAEA,kBAAIC,OAAOC,IAAP,CAAYlC,OAAZ,EAAqBmC,MAArB,GAA8B,CAAlC,EAAqC;AAC7BC,oBAD6B,GACtB,EADsB;;AAEnC,qBAAWC,GAAX,IAAkBrC,OAAlB,EAA2B;AACnBsC,qBADmB,GACbtC,QAAQqC,GAAR,CADa;;AAEzBD,uBAAKG,IAAL,CAAaF,GAAb,SAAoBC,GAApB;AACD;AACDvC,qCAAmBqC,KAAKI,IAAL,CAAU,GAAV,CAAnB;AACD;;AAEDhD,mBAAKsB,OAAL,CAAajB,GAAb,GAAmBE,YAAYP,KAAKsB,OAAL,CAAajB,GAA5C;AACD;;AAzHU;AAAA,kBA6HTzB,GAAGqE,QAAH,OAAkB,QAAlB,IAA8BpE,MAAMsD,IAAN,CAAW,SAAX,EAAsB,EAAE,UAAU,IAAZ,EAAtB,EAA0CC,IAA1C,KAAmD,CA7HxE;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA8HLlD,QAAQmB,GAAR,CAAYrB,OAAZ,mBACEc,QAAQgC,QADV,EAGA9B,KAAKsB,OAAL,CAAajB,GAHb,EAMAL,KAAKkB,IAAL,CAAUd,SANV,EA9HK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAwILlB,QAAQmB,GAAR,CAAYrB,OAAZ,mBACEc,QAAQgC,QADV,EAEA9B,KAAKsB,OAAL,CAAajB,GAFb,EAIAL,KAAKkB,IAAL,CAAUd,SAJV,EAxIK;;AAAA;;AAiJbJ,iBAAKkC,MAAL,CAAY7B,GAAZ,GAAqBL,KAAKsB,OAAL,CAAajB,GAAlC;;AAEA;AAnJa;AAAA,mBAoJPnB,QAAQmB,GAAR,CAAYrB,OAAZ,mBACEc,QAAQgC,QADV,EAEA9B,KAAKsB,OAAL,CAAajB,GAFb,EAGcP,QAAQc,MAHtB,EAKEZ,KAAKkB,IAAL,CAAUd,SALZ,EAOAJ,KAAKsB,OAAL,CAAajB,GAPb,EAQAL,KAAKkB,IAAL,CAAUd,SARV,EApJO;;AAAA;;AAiKf;AACA,iBAAWD,KAAX,IAAmBH,IAAnB,EAAyB;AACjBkD,iBADiB,GACXlD,KAAKG,KAAL,CADW;;AAEvB,kBAAI+C,IAAI9B,SAAR,EAAmB;AACb+B,oBADa,GACH5C,YAAY2C,IAAI7C,GAAJ,CAAQW,IAAR,EADT,WAC6BhB,KAAKkB,IAAL,CAAUd,SADvC;;AAEjB,oBAAID,UAAS,MAAb,EAAqB;AACnBgD,yBAAU5C,YAAY2C,IAAI7C,GAAJ,CAAQW,IAAR,EAAtB,WAA0ChB,KAAKoD,IAAL,CAAUhD,SAApD;AACD;AACGiD,wBALa,GAKF3E,KAAKsE,IAAL,CAAUlD,QAAQc,MAAlB,EAA0BT,KAA1B,CALE;;AAMjBrB,mBAAGwE,aAAH,CAAiBD,QAAjB,EAA2BF,IAA3B,EAAiC,EAAE,YAAY,OAAd,EAAuB,QAAQ,KAA/B,EAAjC;AACAjE,wBAAQyB,KAAR,iBAA4BR,KAA5B,kBAA6CkD,QAA7C;AACD;AACF;;AAEDA,uBAAW3E,KAAKsE,IAAL,CAAUlD,QAAQc,MAAlB,EAA0B,QAA1B,CAAX;AACA1B,oBAAQyB,KAAR,iCAA4C0C,QAA5C;AACAvE,eAAGwE,aAAH,CAAiBD,QAAjB,EAA2BpE,WAA3B,mBAEQa,QAAQyD,UAFhB,GAIG,EAAE,YAAY,OAAd,EAAuB,QAAQ,KAA/B,EAJH;;AAMA,gBAAIzD,QAAQ0D,uBAAR,KAAoC,IAAxC,EAA8C;AAC5C7E,oBAAM8E,UAAN,CAAoB3D,QAAQgC,QAA5B,oBAAwDhC,QAAQ4D,SAAhE;AACD;;AAED3D,eAAG,IAAH;;AA3Le;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;;;;;;;;gCAXMb,O","file":"install.js","sourcesContent":["require('babel-polyfill')\nconst path        = require('path')\nconst utils       = require('./utils')\nconst os          = require('os')\nconst shell       = require('shelljs')\nconst fs          = require('fs')\n// var debug      = require('depurar')('lanyon')\nconst _           = require('lodash')\nconst oneLine     = require('common-tags/lib/oneLine')\nconst stripIndent = require('common-tags/lib/stripIndent')\nconst scrolex     = require('scrolex').persistOpts({\n  announce             : true,\n  addCommandAsComponent: true,\n  components           : `lanyon>install`,\n})\n\nif (require.main === module) {\n  scrolex.failure(`Please only used this module via require, or: src/cli.js ${process.argv[1]}`)\n  process.exit(1)\n}\n\nmodule.exports = async (runtime, cb) => {\n  // Set prerequisite defaults\n  let deps = _.cloneDeep(runtime.prerequisites)\n  for (const name in deps) {\n    if (!deps[name].exeSuffix) {\n      deps[name].exeSuffix = ''\n    }\n    if (!deps[name].exe) {\n      deps[name].exe = name\n    }\n    if (!deps[name].versionCheck) {\n      deps[name].versionCheck = `${deps[name].exe} -v`\n    }\n  }\n\n  let envPrefix    = ''\n  const passEnv    = {}\n  let rubyProvider = ''\n\n  if (runtime.lanyonReset) {\n    scrolex.stick('Removing existing shims')\n    await scrolex.exe(`${runtime.binDir}/*`)\n  }\n\n  if (!utils.satisfied(runtime, 'node')) {\n    scrolex.failure('No satisfying node found')\n    process.exit(1)\n  }\n\n  // Detmine optimal rubyProvider and adjust shim configuration\n  if (utils.satisfied(runtime, 'ruby', `${runtime.binDir}/ruby -v`, 'ruby-shim')) {\n    const buff = fs.readFileSync(`${runtime.binDir}/ruby`, 'utf-8').trim()\n    if (buff.indexOf('docker') !== -1) {\n      rubyProvider = 'docker'\n    } else if (buff.indexOf('rvm') !== -1) {\n      rubyProvider = 'rvm'\n    } else if (buff.indexOf('rbenv') !== -1) {\n      rubyProvider = 'rbenv'\n    } else {\n      rubyProvider = 'system'\n    }\n    scrolex.stick(`Found a working shim - determined to be a \"${rubyProvider}\" rubyProvider`)\n    deps.ruby.exe          = fs.readFileSync(`${runtime.binDir}/ruby`, 'utf-8').trim().replace(' $*', '')\n    deps.ruby.writeShim    = false\n    deps.ruby.versionCheck = `${deps.ruby.exe} -v${deps.ruby.exeSuffix}`\n    deps.gem.exe           = fs.readFileSync(`${runtime.binDir}/gem`, 'utf-8').trim().replace(' $*', '')\n    deps.gem.writeShim     = false\n    deps.bundler.exe       = `${runtime.binDir}/bundler` // <-- not a lanyon shim, it's a real gem bin\n    deps.bundler.writeShim = false\n  } else if (utils.satisfied(runtime, 'ruby', undefined, 'system')) {\n    rubyProvider = 'system'\n    deps.gem.exe     = shell.which('gem').stdout\n    deps.bundler.exe = shell.which('bundler').stdout\n  } else if (utils.satisfied(runtime, 'docker')) {\n    rubyProvider = 'docker'\n    if (process.env.DOCKER_BUILD === '1') {\n      const cache = process.env.DOCKER_RESET === '1' ? ' --no-cache' : ''\n      await scrolex.exe(`cd \"${runtime.cacheDir}\" && docker build${cache} -t kevinvz/lanyon:${runtime.lanyonVersion} .`)\n      await scrolex.exe(`cd \"${runtime.cacheDir}\" && docker push kevinvz/lanyon:${runtime.lanyonVersion}`)\n    }\n    deps.sh.exe     = utils.dockerCmd(runtime, 'sh', '--interactive --tty')\n    deps.ruby.exe   = utils.dockerCmd(runtime, 'ruby')\n    deps.jekyll.exe = utils.dockerCmd(runtime, 'bundler exec jekyll')\n  } else if (utils.satisfied(runtime, 'rbenv') && shell.exec('rbenv install --help', { 'silent': true }).code === 0) {\n    // rbenv does not offer installing of rubies by default, it will also require the install plugin --^\n    rubyProvider = 'rbenv'\n    await scrolex.exe(`bash -c \"rbenv install --skip-existing '${deps.ruby.preferred}'\"`)\n    deps.ruby.exe          = `bash -c \"eval $(rbenv init -) && rbenv shell '${deps.ruby.preferred}' &&`\n    deps.ruby.exeSuffix    = '\"'\n    deps.ruby.versionCheck = `${deps.ruby.exe}ruby -v${deps.ruby.exeSuffix}`\n  } else if (utils.satisfied(runtime, 'rvm')) {\n    rubyProvider = 'rvm'\n    await scrolex.exe(`bash -c \"rvm install '${deps.ruby.preferred}'\"`)\n    deps.ruby.exe          = `bash -c \"rvm '${deps.ruby.preferred}' exec`\n    deps.ruby.exeSuffix    = '\"'\n    deps.ruby.versionCheck = `${deps.ruby.exe} ruby -v${deps.ruby.exeSuffix}`\n  } else {\n    scrolex.failure('Ruby version not satisfied, and exhausted ruby version installer helpers (rvm, rbenv, brew)')\n    process.exit(1)\n  }\n\n  // Verify Ruby\n  if (!utils.satisfied(runtime, 'ruby', deps.ruby.versionCheck, 'verify')) {\n    scrolex.failure('Ruby should have been installed but still not satisfied')\n    process.exit(1)\n  }\n\n  if (rubyProvider !== 'docker') {\n    // Install Bundler\n    deps.bundler.exe = `${deps.ruby.exe} ${deps.bundler.exe}`\n    if (!utils.satisfied(runtime, 'bundler', `${deps.bundler.exe} -v${deps.ruby.exeSuffix}`)) {\n      let localGemArgs = ''\n      if (rubyProvider === 'system') {\n        localGemArgs = `--binDir='${runtime.binDir}' --install-dir='vendor/gem_home'`\n      }\n\n      await scrolex.exe(oneLine`\n        cd \"${runtime.cacheDir}\" && (\n          ${deps.ruby.exe} ${deps.gem.exe} install ${localGemArgs}\n            --no-rdoc\n            --no-ri\n          bundler -v '${deps.bundler.preferred}'\n          ${deps.ruby.exeSuffix}\n        )\n      `)\n\n      if (rubyProvider === 'system') {\n        deps.bundler.exe = `${runtime.binDir}/bundler`\n        passEnv.GEM_HOME = 'vendor/gem_home'\n        passEnv.GEM_PATH = 'vendor/gem_home'\n\n        if (Object.keys(passEnv).length > 0) {\n          const vals = []\n          for (const key in passEnv) {\n            const val = passEnv[key]\n            vals.push(`${key}=${val}`)\n          }\n          envPrefix = `env ${vals.join(' ')} `\n        }\n\n        deps.bundler.exe = envPrefix + deps.bundler.exe\n      }\n    }\n\n    // Configure Bundler (nokogiri)\n    if (os.platform() === 'darwin' && shell.exec('brew -v', { 'silent': true }).code === 0) {\n      await scrolex.exe(oneLine`\n        cd \"${runtime.cacheDir}\" && (\n          brew install libxml2;\n          ${deps.bundler.exe} config build.nokogiri\n            --use-system-libraries\n            --with-xml2-include=$(brew --prefix libxml2 | sed 's@_[0-9]*$@@')/include/libxml2\n          ${deps.ruby.exeSuffix}\n        )\n      `)\n    } else {\n      await scrolex.exe(oneLine`\n        cd \"${runtime.cacheDir}\" && (\n          ${deps.bundler.exe} config build.nokogiri\n            --use-system-libraries\n          ${deps.ruby.exeSuffix}\n        )\n      `)\n    }\n\n    deps.jekyll.exe = `${deps.bundler.exe} exec jekyll`\n\n    // Install Gems from Gemfile bundle\n    await scrolex.exe(oneLine`\n      cd \"${runtime.cacheDir}\" && (\n        ${deps.bundler.exe} install\n          --binstubs='${runtime.binDir}'\n          --path='vendor/bundler'\n          ${deps.ruby.exeSuffix}\n        ||\n        ${deps.bundler.exe} update\n        ${deps.ruby.exeSuffix}\n      )\n    `)\n  }\n\n  // Write shims\n  for (const name in deps) {\n    const dep = deps[name]\n    if (dep.writeShim) {\n      let shim = `${envPrefix + dep.exe.trim()} $*${deps.ruby.exeSuffix}\\n`\n      if (name === 'dash') {\n        shim = `${envPrefix + dep.exe.trim()} $*${deps.dash.exeSuffix}\\n`\n      }\n      var shimPath = path.join(runtime.binDir, name)\n      fs.writeFileSync(shimPath, shim, { 'encoding': 'utf-8', 'mode': '755' })\n      scrolex.stick(`Installed: ${name} shim to: ${shimPath} ..`)\n    }\n  }\n\n  shimPath = path.join(runtime.binDir, 'deploy')\n  scrolex.stick(`Installed: deploy shim to: ${shimPath} ..`)\n  fs.writeFileSync(shimPath, stripIndent`\n    #!/bin/sh -ex\n    cd \"${runtime.projectDir}\"\n    (npm run build:production || npm run web:build:production) && (npm run deploy || npm run web:deploy)\n  `, { 'encoding': 'utf-8', 'mode': '755' })\n\n  if (runtime.lanyonUpdateGemLockfile === true) {\n    utils.fsCopySync(`${runtime.cacheDir}/Gemfile.lock`, `${runtime.lanyonDir}/Gemfile.lock`)\n  }\n\n  cb(null)\n}\n"]}