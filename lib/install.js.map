{"version":3,"sources":["../src/install.js"],"names":["require","path","utils","shell","os","fs","_","oneLine","stripIndent","scrolex","persistOpts","announce","addCommandAsComponent","components","main","module","failure","process","argv","exit","exports","runtime","cb","deps","cloneDeep","prerequisites","name","exeSuffix","exe","versionCheck","envPrefix","passEnv","rubyProvider","lanyonReset","stick","rm","binDir","satisfied","buff","readFileSync","trim","indexOf","ruby","replace","writeShim","gem","bundler","undefined","which","stdout","env","DOCKER_BUILD","cache","DOCKER_RESET","lanyonVersion","sh","dockerCmd","jekyll","exec","code","preferred","localGemArgs","cacheDir","GEM_HOME","GEM_PATH","Object","keys","length","vals","key","val","push","join","platform","dep","shim","dash","shimPath","writeFileSync","projectDir","lanyonUpdateGemLockfile","fsCopySync","lanyonDir"],"mappings":"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","file":"install.js","sourcesContent":["require('babel-polyfill')\nconst path        = require('path')\nconst utils       = require('./utils')\nconst shell       = require('shelljs')\nconst os          = require('os')\nconst fs          = require('fs')\n// var debug      = require('depurar')('lanyon')\nconst _           = require('lodash')\nconst oneLine     = require('common-tags/lib/oneLine')\nconst stripIndent = require('common-tags/lib/stripIndent')\nconst scrolex     = require('scrolex').persistOpts({\n  announce             : true,\n  addCommandAsComponent: true,\n  components           : `lanyon>install`,\n})\n\nif (require.main === module) {\n  scrolex.failure(`Please only used this module via require, or: src/cli.js ${process.argv[1]}`)\n  process.exit(1)\n}\n\nmodule.exports = async (runtime, cb) => {\n  // Set prerequisite defaults\n  let deps = _.cloneDeep(runtime.prerequisites)\n  for (const name in deps) {\n    if (!deps[name].exeSuffix) {\n      deps[name].exeSuffix = ''\n    }\n    if (!deps[name].exe) {\n      deps[name].exe = name\n    }\n    if (!deps[name].versionCheck) {\n      deps[name].versionCheck = `${deps[name].exe} -v`\n    }\n  }\n\n  let envPrefix    = ''\n  const passEnv    = {}\n  let rubyProvider = ''\n\n  if (runtime.lanyonReset) {\n    scrolex.stick('Removing existing shims')\n    shell.rm('-f', `${runtime.binDir}/*`)\n  }\n\n  if (!utils.satisfied(runtime, 'node')) {\n    shell.exit(1)\n  }\n\n  // Detmine optimal rubyProvider and adjust shim configuration\n  if (utils.satisfied(runtime, 'ruby', `${runtime.binDir}/ruby -v`, 'ruby-shim')) {\n    const buff = fs.readFileSync(`${runtime.binDir}/ruby`, 'utf-8').trim()\n    if (buff.indexOf('docker') !== -1) {\n      rubyProvider = 'docker'\n    } else if (buff.indexOf('rvm') !== -1) {\n      rubyProvider = 'rvm'\n    } else if (buff.indexOf('rbenv') !== -1) {\n      rubyProvider = 'rbenv'\n    } else {\n      rubyProvider = 'system'\n    }\n    scrolex.stick(`Found a working shim - determined to be a \"${rubyProvider}\" rubyProvider`)\n    deps.ruby.exe          = fs.readFileSync(`${runtime.binDir}/ruby`, 'utf-8').trim().replace(' $*', '')\n    deps.ruby.writeShim    = false\n    deps.ruby.versionCheck = `${deps.ruby.exe} -v${deps.ruby.exeSuffix}`\n    deps.gem.exe           = fs.readFileSync(`${runtime.binDir}/gem`, 'utf-8').trim().replace(' $*', '')\n    deps.gem.writeShim     = false\n    deps.bundler.exe       = `${runtime.binDir}/bundler` // <-- not a lanyon shim, it's a real gem bin\n    deps.bundler.writeShim = false\n  } else if (utils.satisfied(runtime, 'ruby', undefined, 'system')) {\n    rubyProvider = 'system'\n    deps.gem.exe     = shell.which('gem').stdout\n    deps.bundler.exe = shell.which('bundler').stdout\n  } else if (utils.satisfied(runtime, 'docker')) {\n    rubyProvider = 'docker'\n    if (process.env.DOCKER_BUILD === '1') {\n      const cache = process.env.DOCKER_RESET === '1' ? ' --no-cache' : ''\n      await scrolex.exe(`cd .lanyon && docker build${cache} -t kevinvz/lanyon:${runtime.lanyonVersion} .`)\n      await scrolex.exe(`cd .lanyon && docker push kevinvz/lanyon:${runtime.lanyonVersion}`)\n    }\n    deps.sh.exe     = utils.dockerCmd(runtime, 'sh', '--interactive --tty')\n    deps.ruby.exe   = utils.dockerCmd(runtime, 'ruby')\n    deps.jekyll.exe = utils.dockerCmd(runtime, 'bundler exec jekyll')\n  } else if (utils.satisfied(runtime, 'rbenv') && shell.exec('rbenv install --help', { 'silent': true }).code === 0) {\n    // rbenv does not offer installing of rubies by default, it will also require the install plugin --^\n    rubyProvider = 'rbenv'\n    await scrolex.exe(`bash -c \"rbenv install --skip-existing '${deps.ruby.preferred}'\"`)\n    deps.ruby.exe          = `bash -c \"eval $(rbenv init -) && rbenv shell '${deps.ruby.preferred}' &&`\n    deps.ruby.exeSuffix    = '\"'\n    deps.ruby.versionCheck = `${deps.ruby.exe}ruby -v${deps.ruby.exeSuffix}`\n  } else if (utils.satisfied(runtime, 'rvm')) {\n    rubyProvider = 'rvm'\n    await scrolex.exe(`bash -c \"rvm install '${deps.ruby.preferred}'\"`)\n    deps.ruby.exe          = `bash -c \"rvm '${deps.ruby.preferred}' exec`\n    deps.ruby.exeSuffix    = '\"'\n    deps.ruby.versionCheck = `${deps.ruby.exe} ruby -v${deps.ruby.exeSuffix}`\n  } else {\n    scrolex.failure('Ruby version not satisfied, and exhausted ruby version installer helpers (rvm, rbenv, brew)')\n    process.exit(1)\n  }\n\n  // Verify Ruby\n  if (!utils.satisfied(runtime, 'ruby', deps.ruby.versionCheck, 'verify')) {\n    scrolex.failure('Ruby should have been installed but still not satisfied')\n    process.exit(1)\n  }\n\n  if (rubyProvider !== 'docker') {\n    // Install Bundler\n    deps.bundler.exe = `${deps.ruby.exe} ${deps.bundler.exe}`\n    if (!utils.satisfied(runtime, 'bundler', `${deps.bundler.exe} -v${deps.ruby.exeSuffix}`)) {\n      let localGemArgs = ''\n      if (rubyProvider === 'system') {\n        localGemArgs = `--binDir='${runtime.binDir}' --install-dir='vendor/gem_home'`\n      }\n\n      await scrolex.exe(oneLine`\n        cd \"${runtime.cacheDir}\" && (\n          ${deps.ruby.exe} ${deps.gem.exe} install ${localGemArgs}\n            --no-rdoc\n            --no-ri\n          bundler -v '${deps.bundler.preferred}'${deps.ruby.exeSuffix}\n          ${deps.ruby.exeSuffix}\n        )\n      `)\n\n      if (rubyProvider === 'system') {\n        deps.bundler.exe = `${runtime.binDir}/bundler`\n        passEnv.GEM_HOME = 'vendor/gem_home'\n        passEnv.GEM_PATH = 'vendor/gem_home'\n\n        if (Object.keys(passEnv).length > 0) {\n          const vals = []\n          for (const key in passEnv) {\n            const val = passEnv[key]\n            vals.push(`${key}=${val}`)\n          }\n          envPrefix = `env ${vals.join(' ')} `\n        }\n\n        deps.bundler.exe = envPrefix + deps.bundler.exe\n      }\n    }\n\n    // Configure Bundler (nokogiri)\n    if (os.platform() === 'darwin' && shell.exec('brew -v', { 'silent': true }).code === 0) {\n      await scrolex.exe(oneLine`\n        cd \"${runtime.cacheDir}\" && (\n          brew install libxml2;\n          ${deps.bundler.exe} config build.nokogiri\n            --use-system-libraries\n            --with-xml2-include=$(brew --prefix libxml2 | sed 's@_[0-9]*$@@')/include/libxml2\n          ${deps.ruby.exeSuffix}\n        )\n      `)\n    } else {\n      await scrolex.exe(oneLine`\n        cd \"${runtime.cacheDir}\" && (\n          ${deps.bundler.exe} config build.nokogiri\n            --use-system-libraries\n          ${deps.ruby.exeSuffix}\n        )\n      `)\n    }\n\n    deps.jekyll.exe = `${deps.bundler.exe} exec jekyll`\n\n    // Install Gems from Gemfile bundle\n    await scrolex.exe(oneLine`\n      cd \"${runtime.cacheDir}\" && (\n        ${deps.bundler.exe} install\n          --binstubs='${runtime.binDir}'\n          --path='vendor/bundler'\n          ${deps.ruby.exeSuffix}\n        ||\n        ${deps.bundler.exe} update\n        ${deps.ruby.exeSuffix}\n      )\n    `)\n  }\n\n  // Write shims\n  for (const name in deps) {\n    const dep = deps[name]\n    if (dep.writeShim) {\n      let shim = `${envPrefix + dep.exe.trim()} $*${deps.ruby.exeSuffix}\\n`\n      if (name === 'dash') {\n        shim = `${envPrefix + dep.exe.trim()} $*${deps.dash.exeSuffix}\\n`\n      }\n      var shimPath = path.join(runtime.binDir, name)\n      fs.writeFileSync(shimPath, shim, { 'encoding': 'utf-8', 'mode': '755' })\n      scrolex.stick(`Installed: ${name} shim to: ${shimPath} ..`)\n    }\n  }\n\n  shimPath = path.join(runtime.binDir, 'deploy')\n  scrolex.stick(`Installed: deploy shim to: ${shimPath} ..`)\n  fs.writeFileSync(shimPath, stripIndent`\n    #!/bin/sh -ex\n    cd \"${runtime.projectDir}\"\n    (npm run build:production || npm run web:build:production) && (npm run deploy || npm run web:deploy)\n  `, { 'encoding': 'utf-8', 'mode': '755' })\n\n  if (runtime.lanyonUpdateGemLockfile === true) {\n    utils.fsCopySync(`${runtime.cacheDir}/Gemfile.lock`, `${runtime.lanyonDir}/Gemfile.lock`)\n  }\n\n  cb(null)\n}\n"]}